import 'dart:io';
import 'dart:math';

class Game {
  List<List<String>> board;
  Random random;
  String currentPlayer;

  Game()
      : board = [
          ['', '', ''],
          ['', '', ''],
          ['', '', '']
        ],
        random = Random(),
        currentPlayer = 'X';

  void displayBoard() {
    for (var i = 0; i < board.length; i++) {
      print(board[i].join(' | '));
      if (i < board.length - 1) {
        print('--+---+---');
      }
    }
  }

  void playGame() {
    displayBoard();
    while (true) {
      print(
          'Player 1, please enter the number of the square where you want to place your X:');
      var player1Input = stdin.readLineSync();
      if (player1Input != null) {
        var player1Move = int.parse(player1Input);
        placeMove(player1Move, 'X');
      }
      displayBoard();
      if (checkForWin('X')) {
        print('Player 1 wins!');
        break;
      }
      if (checkForTie()) {
        print('It\'s a tie!');
        break;
      }
      print(
          'Player 2, please enter the number of the square where you want to place your 0:');
      var player2Input = stdin.readLineSync();
      if (player2Input != null) {
        var player2Move = int.parse(player2Input);
        placeMove(player2Move, 'O');
      }
      displayBoard();
      if (checkForWin('O')) {
        print('Player 2 wins!');
        break;
      }
      if (checkForTie()) {
        print('It\'s a tie!');
        break;
      }
    }
  }

  void placeMove(int move, String player) {
    int row = move ~/ 3;
    int col = move % 3;
    if (board[row][col] != '') {
      print('That square is already occupied. Please choose another.');
      return;
    }
    board[row][col] = player;
    currentPlayer = currentPlayer == 'X' ? 'O' : 'X';
  }

  bool checkForWin(String player) {
    // Check rows
    for (var row in board) {
      if (row.every((square) => square == player)) {
        return true;
      }
    }

    // Check columns
    for (int col = 0; col < board.length; col++) {
      var column = board.map((row) => row[col]).toList();
      if (column.every((square) => square == player)) {
        return true;
      }
    }

    // Check diagonals
    var diag1 = [board[0][0], board[1][1], board[2][2]];
    var diag2 = [board[0][2], board[1][1], board[2][0]];
    if (diag1.every((square) => square == player) ||
        diag2.every((square) => square == player)) {
      return true;
    }

    return false;
  }

  bool checkForTie() {
    for (var row in board) {
      for (var square in row) {
        if (square == '') {
          return false;
        }
      }
    }
    return true;
  }
}

void main() {
  Game game = Game();
  game.playGame();
}
